{"version":3,"sources":["ModalAdd.js","Filter.js","Search.js","View.js","App.js","reportWebVitals.js","index.js"],"names":["rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","textField","marginLeft","marginRight","root","margin","ModalAdd","props","classes","React","useState","modalStyle","body","style","className","noValidate","autoComplete","onSubmit","handlerSubmit","TextField","name","label","variant","value","onChange","handlerChange","type","time","InputLabelProps","shrink","placeholder","multiline","description","tags","priority","Button","size","color","Modal","open","openNew","onClose","setOpenNew","aria-labelledby","aria-describedby","marginTop","Filter","rows","setRows","openFilter","rowsOld","setRowsOld","setValue","Boolean","id","undefined","Popper","anchorEl","FormControl","component","FormLabel","RadioGroup","row","aria-label","event","target","FormControlLabel","control","Radio","onClick","a","filter","item","Date","parse","now","b","c","display","alignItems","input","flex","iconButton","Search","openSearch","placement","handlerSearch","regexp","toLowerCase","search","transition","TransitionProps","Fade","timeout","Paper","IconButton","InputBase","inputProps","ViewColumn","openView","setState","state","handleChange","checked","FormGroup","Switch","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","lighten","light","text","primary","dark","title","EnhancedTableToolbar","newPlacement","selected","setSelected","setTodosWithSave","setOpen","setOpenView","setOpenFilter","setOpenSearch","setPlacement","setName","setTime","setDescription","setTags","setPriority","Toolbar","clsx","Typography","Tooltip","findIndex","splice","length","disabled","currentTarget","prev","preventDefault","createData","data2","concat","marginBottom","table","minWidth","clip","height","overflow","EnhancedTable","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","localStorage","getItem","JSON","emptyRows","min","newRows","setItem","stringify","TableContainer","Table","newSelecteds","n","TableBody","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5cd1b2c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 250,\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '30ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ModalAdd(props) {\r\n    const classes = useStyles();\r\n\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const handleClose = () => {\r\n        props.setOpenNew(false);\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h3>Добавление нового дела</h3>\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={props.handlerSubmit}>\r\n                <TextField name=\"name\" label=\"Название\" variant=\"outlined\" value={props.name} onChange={props.handlerChange}/>\r\n                <TextField\r\n                    name=\"time\"\r\n                    label=\"Дата/время исполнения\"\r\n                    type=\"datetime-local\"\r\n                    value={props.time}\r\n                    variant=\"outlined\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={props.handlerChange}\r\n                />\r\n                <TextField\r\n                    name=\"description\"\r\n                    label=\"Описание дела\"\r\n                    placeholder=\"Опишите дело\"\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    value={props.description}\r\n                    onChange={props.handlerChange}\r\n                />\r\n                <TextField name=\"tags\" label=\"Теги\" variant=\"outlined\" value={props.tags} onChange={props.handlerChange}/>\r\n                <TextField name=\"priority\" type=\"number\" label=\"Приоритет\" variant=\"outlined\" value={props.priority}\r\n                           onChange={props.handlerChange}/>\r\n                <br/>\r\n                <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\">\r\n                    Добавить дело\r\n                </Button>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={props.openNew}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        border: '1px solid',\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    root: {\r\n        width: 700,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Filter(props) {\r\n    const classes = useStyles();\r\n    const {rows, setRows, openFilter} = props;\r\n    const [rowsOld, setRowsOld] = React.useState(rows);\r\n    const [value, setValue] = React.useState(\"all\");\r\n    const open = Boolean(props.openFilter);\r\n    const id = open ? 'simple-popper' : undefined;\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        setRows(rowsOld);\r\n    };\r\n\r\n    const getLimList = () => {\r\n        setRowsOld( rows);\r\n\r\n        switch (value) {\r\n            case \"day\":\r\n                 let a = rows.filter(item =>\r\n                    Date.parse(item.time) > Date.now() && Date.parse(item.time) < (Date.now() + 1000*60*60*24)\r\n                );\r\n                setRows(a);\r\n                break;\r\n            case \"week\":\r\n                let b = rows.filter(item =>\r\n                    Date.parse(item.time) > Date.now() && Date.parse(item.time) < (Date.now() + 1000*60*60*24*7)\r\n                );\r\n                setRows(b);\r\n                break;\r\n            case \"month\":\r\n                let c = rows.filter(item =>\r\n                    Date.parse(item.time) > Date.now() && Date.parse(item.time) < (Date.now() + 1000*60*60*24*30)\r\n                );\r\n                setRows(c);\r\n                break;\r\n            case \"all\":\r\n                setRows(rowsOld);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Popper id={id} open={open} anchorEl={openFilter}>\r\n                <div className={`${classes.paper} ${classes.root}`}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Сформировать список дел:</FormLabel>\r\n                        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n                            <FormControlLabel value=\"day\" control={<Radio color=\"primary\" />} label=\"на день\" />\r\n                            <FormControlLabel value=\"week\" control={<Radio color=\"primary\" />} label=\"на неделю\" />\r\n                            <FormControlLabel value=\"month\" control={<Radio color=\"primary\" />} label=\"на месяц\" />\r\n                            <FormControlLabel value=\"all\" control={<Radio color=\"primary\" />} label=\"полный список\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <br/>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={getLimList}>\r\n                        Формировать\r\n                    </Button>\r\n                </div>\r\n            </Popper>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n}));\r\n\r\nexport default function Search(props) {\r\n    const {open, openSearch, placement, rows, setRows} = props;\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(\"\")\r\n    const rowsOld = rows;\r\n\r\n\r\n    const handlerSearch = (event) => {\r\n        setValue(event.target.value);\r\n        setRows(rowsOld);\r\n        let regexp = event.target.value.toLowerCase();\r\n        let a = rows.filter(item =>\r\n            item.name.toLowerCase().search(regexp) !== -1 ||\r\n            item.time.toLowerCase().search(regexp) !== -1 ||\r\n            item.description.toLowerCase().search(regexp) !== -1 ||\r\n            item.tags.toLowerCase().search(regexp) !== -1 ||\r\n            item.priority.toLowerCase().search(regexp) !== -1\r\n        )\r\n        setRows(a)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Popper open={open} openSearch={openSearch} placement={placement} transition>\r\n                {({TransitionProps}) => (\r\n                    <Fade {...TransitionProps} timeout={350}>\r\n                        <Paper component=\"form\" className={classes.root}>\r\n                            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                                <SearchIcon/>\r\n                            </IconButton>\r\n                            <InputBase\r\n                                value={value}\r\n                                onChange={handlerSearch}\r\n                                className={classes.input}\r\n                                placeholder=\"Search\"\r\n                                inputProps={{'aria-label': 'search'}}\r\n                            />\r\n                            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"close\">\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </Paper>\r\n\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        border: '1px solid',\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    root: {\r\n        width: 300,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ViewColumn(props) {\r\n    const classes = useStyles();\r\n    const {openView, setState, state} = props;\r\n    const open = Boolean(props.openView);\r\n    const id = open ? 'simple-popper' : undefined;\r\n\r\n\r\n\r\n        const handleChange = (event) => {\r\n            setState({ ...state, [event.target.name]: event.target.checked });\r\n        };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Popper id={id} open={open} anchorEl={openView}>\r\n                <div className={`${classes.paper} ${classes.root}`}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Отобразить:</FormLabel>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={<Switch checked={state.name} onChange={handleChange} name=\"name\" />}\r\n                                label=\"Название\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Switch checked={state.time} onChange={handleChange} name=\"time\" />}\r\n                                label=\"Дата/время исполнения\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Switch checked={state.description} onChange={handleChange} name=\"description\" />}\r\n                                label=\"Описание дела\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Switch checked={state.tags} onChange={handleChange} name=\"tags\" />}\r\n                                label=\"Теги\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Switch checked={state.priority} onChange={handleChange} name=\"priority\" />}\r\n                                label=\"Приоритет\"\r\n                            />\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                </div>\r\n            </Popper>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ModalAdd from \"./ModalAdd\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport Filter from \"./Filter\";\nimport Search from \"./Search\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport ViewColumnIcon from '@material-ui/icons/ViewColumn';\nimport ViewColumn from \"./View\";\n\nfunction createData(name, time, description, tags, priority) {\n    return {name, time, description, tags, priority};\n}\n\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {id: 'name', numeric: false, disablePadding: true, label: 'Название'},\n    {id: 'time', numeric: false, type: 'dateTime', disablePadding: false, label: 'Дата/время исполнения'},\n    {id: 'description', numeric: false, disablePadding: false, label: 'Описание дела'},\n    {id: 'tags', numeric: false, disablePadding: false, label: 'Теги'},\n    {id: 'priority', numeric: false, disablePadding: false, label: 'Приоритет'},\n];\n\nfunction EnhancedTableHead(props) {\n    const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, state} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{'aria-label': 'select all desserts'}}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                        className={state[headCell.id] ? '': classes.display }\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const {numSelected, selected, setSelected, rows, setRows, setTodosWithSave, setState, state} = props;\n    const [open, setOpen] = React.useState(false);\nconst [openView, setOpenView] = useState(false);\n    const [openFilter, setOpenFilter] = React.useState(null);\n    const [openNew, setOpenNew] = React.useState(false);\n    const [openSearch, setOpenSearch] = React.useState(false);\n    const [placement, setPlacement] = React.useState();\n\n\n    const handlerSearch = (newPlacement) => (event) => {\n        setOpenSearch(event.currentTarget);\n        setOpen((prev) => placement !== newPlacement || !prev);\n        setPlacement(newPlacement);\n    };\n\n    const handlerDelete = () => {\n        do {\n            let a = rows.findIndex(item => item.name === selected[0]);\n            setSelected(selected.splice(0, 1));\n            rows.splice(a, 1);\n            setTodosWithSave(rows);\n        }\n        while (selected.length !== 0)\n\n        setSelected([]);\n    }\n\n\n\n    const handlerEdit = () => {\n\n        let a = rows.findIndex(item => item.name === selected[0]);\n        setName(rows[a].name);\n        setTime(rows[a].time);\n        setDescription(rows[a].description);\n        setTags(rows[a].tags);\n        setPriority(rows[a].priority);\n        setSelected([]);\n        rows.splice(a, 1);\n        setTodosWithSave(rows);\n        setOpenNew(true);\n    }\n\n    const handlerOpen = () => {\n        setOpenNew(true)\n    }\n\n    const handlerView = (event) => {\n        setOpenView(openView ? null : event.currentTarget);\n    }\n\n    const handlerFilter = (event) => {\n        setOpenFilter(openFilter ? null : event.currentTarget);\n    };\n\n    const [name, setName] = useState(\"\");\n    const [time, setTime] = useState(\"2021-02-20T10:30\");\n    const [description, setDescription] = useState(\"\");\n    const [tags, setTags] = useState(\"\");\n    const [priority, setPriority] = useState(\"\");\n\n    const handlerChange = event => {\n        switch (event.target.name) {\n            case \"name\":\n                setName(event.target.value);\n                break;\n            case \"time\":\n                setTime(event.target.value);\n                break;\n            case \"description\":\n                setDescription(event.target.value);\n                break;\n            case \"tags\":\n                setTags(event.target.value);\n                break;\n            case \"priority\":\n                setPriority(event.target.value);\n                break;\n            default:\n        }\n    };\n\n    const handlerSubmit = event => {\n\n        event.preventDefault();\n        let a = createData(name, time, description, tags, priority);\n        const data2 = rows.concat([a]);\n\n        setName(\"\");\n        setTime(\"\");\n        setDescription(\"\");\n        setTags(\"\");\n        setPriority(\"\");\n        setTodosWithSave(data2);\n        setOpenNew(false)\n    }\n\n\n    return (\n        <>\n            <\n                Toolbar\n                className={clsx(classes.root,\n                    {\n                        [classes.highlight]:\n                        numSelected > 0,\n                    }\n                )\n                }\n            >\n                {\n                    numSelected > 0 ? (\n                        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                            {numSelected} выбрано\n                        </Typography>\n                    ) : (\n                        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                            Список дел\n                        </Typography>\n                    )\n                }\n\n                {\n                    numSelected > 0 ? (\n                        <>\n                        <Tooltip title=\"Удалить\">\n                            <IconButton aria-label=\"delete\" onClick={handlerDelete}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </Tooltip>\n                            <Tooltip title=\"Редактировать\">\n                                <IconButton aria-label=\"delete\" disabled={selected.length>1 ? \"disabled\": \"\"} onClick={handlerEdit}>\n                                    <EditIcon/>\n                                </IconButton>\n                            </Tooltip>\n                    </>\n                    ) : (\n                        <>\n                            <Tooltip title=\"Поиск\">\n                                <IconButton aria-label=\"search\" onClick={handlerSearch('left')}>\n                                    <SearchIcon/>\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"Колонки\">\n                                <IconButton aria-label=\"search\" onClick={handlerView}>\n                                    <ViewColumnIcon/>\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"Фильтр\">\n                                <IconButton aria-label=\"filter list\" onClick={handlerFilter}>\n                                    <FilterListIcon/>\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"Добавить дело\">\n                                <IconButton aria-label=\"add\" onClick={handlerOpen}>\n                                    <PostAddIcon/>\n                                </IconButton>\n                            </Tooltip>\n                        </>\n                    )\n                }\n            </Toolbar>\n            <ModalAdd openNew={openNew} setOpenNew={setOpenNew} name={name} description={description} time={time} tags={tags}\n                      priority={priority}\n                      handlerChange={handlerChange} handlerSubmit={handlerSubmit}/>\n<Filter openFilter={openFilter} rows={rows} setRows={setRows} />\n<Search open={open} openSearch={openSearch} placement={placement} rows={rows} setRows={setRows}/>\n<ViewColumn openView={openView} headCells={headCells} state={state} setState={setState} />\n        </>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\ndisplay: {\n  display: \"none\"\n},\n}));\n\nexport default function EnhancedTable() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('name');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [state, setState] = useState({\n        name: true,\n        time: true,\n        description: true,\n        tags: true,\n        priority: true,\n    });\n    // const [newStyle, setNewStyle] = useState(false);\n    const [rows, setRows] = useState(localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) :[]);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const setTodosWithSave = (newRows) => {\n        setRows(newRows);\n        localStorage.setItem('todos', JSON.stringify(newRows))\n    }\n\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSelected={setSelected}\n                                      rows={rows} setRows={setRows} setTodosWithSave={setTodosWithSave} state={state} setState={setState}/>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                            state={state}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{'aria-labelledby': labelId}}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                className={state.name ? '': classes.display }\n                                                // style={state.name ? \"\" : classes.display }\n                                                component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell\n                                                className={state.time ? '': classes.display }\n                                            >{row.time}</TableCell>\n                                            <TableCell\n                                                className={state.description ? '': classes.display }\n                                            >{row.description}</TableCell>\n                                            <TableCell\n                                                className={state.tags ? '': classes.display }\n                                            >{row.tags}</TableCell>\n                                            <TableCell\n                                                className={state.priority ? '': classes.display }\n                                            >{row.priority}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{height: (dense ? 33 : 53) * emptyRows}}>\n                                    <TableCell colSpan={6}/>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense}/>}\n                label=\"Плотное расположение\"\n            />\n        </div>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}